"use strict";

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

Object.defineProperty(exports, "__esModule", { value: true });
var immutable_1 = require("immutable");

var Vector = function () {
    function Vector(arr) {
        _classCallCheck(this, Vector);

        this.arr = arr;
    }

    _createClass(Vector, [{
        key: "argSort",
        value: function argSort() {
            var list = [].concat(_toConsumableArray(this.arr));
            var result = list.map(function (v, i) {
                return [v, i];
            }).sort(function (_ref, _ref2) {
                var _ref4 = _slicedToArray(_ref, 1),
                    v1 = _ref4[0];

                var _ref3 = _slicedToArray(_ref2, 1),
                    v2 = _ref3[0];

                return v1 > v2;
            }).map(function (_ref5) {
                var _ref6 = _slicedToArray(_ref5, 2),
                    i = _ref6[1];

                return i;
            });
            return result;
        }
    }, {
        key: "zipWith",
        value: function zipWith(func, b) {
            var result = this.arr.map(function (v, i) {
                return func(v, b.arr[i]);
            });
            return result;
        }
    }], [{
        key: "sign",
        value: function sign(arr) {
            if (Array.isArray(arr)) {
                return arr.map(function (v) {
                    return v === 0.0 ? 0.0 : v > 0.0 ? 1.0 : -1.0;
                });
            } else {
                return arr === 0.0 ? 0.0 : arr > 0.0 ? 1.0 : -1.0;
            }
        }
    }, {
        key: "rand",
        value: function rand(m) {
            var initArr = immutable_1.Repeat(0, m).toArray();
            var result = initArr.map(function (v) {
                return Math.random();
            });
            return result;
        }
    }]);

    return Vector;
}();

exports.default = Vector;
//# sourceMappingURL=../../maps/utils/vector/index.js.map
